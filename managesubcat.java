/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stockmgm;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static stockmgm.vars.myurl;
import static stockmgm.vars.pass;
import static stockmgm.vars.uname;

/**
 *
 * @author GTB Student
 */
public class managesubcat extends javax.swing.JInternalFrame {

    /**
     * Creates new form managecat
     */
    public managesubcat() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Manage SubCategory");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("SubCategory Name");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Choose Category");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Choose SubCategory");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton3)))))))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(111, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       if(validn())
        {
        try
            {
                Connection myconn = DriverManager.getConnection(myurl, uname, pass);
                try
                {
                   String q="insert into managesubcat(catid,subcatname) values(?,?)";
                   PreparedStatement myst = myconn.prepareStatement(q);
                   
                   String bigname = jComboBox1.getSelectedItem().toString();//100,Bakery
                   
                   int cpos = bigname.indexOf(",");
                   
                   String catid = bigname.substring(0, cpos);
                   
                   
                   myst.setString(1, catid);
                   myst.setString(2, jTextField1.getText());
                              
                   int count = myst.executeUpdate();
                   if(count==1)
                   {
                       JOptionPane.showMessageDialog(rootPane, "Sub Category added successfully");
                       
                   }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error Occured " + e.getMessage());
                }
                finally
                {
                    myconn.close();
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
 boolean validn()
    {
        if(jTextField1.getText().length()<2)
        {
            JOptionPane.showMessageDialog(rootPane, "Please enter proper name");
            return(false);
        }
        else if(jComboBox1.getSelectedIndex()==0)
        {
            JOptionPane.showMessageDialog(rootPane, "Please choose category");
            return(false);
        }
        else
        {
            return(true);
        }
    }
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        
        fetchcat();
    }//GEN-LAST:event_formInternalFrameOpened

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        if(jComboBox2.getSelectedIndex()>0)
        { 
        String bigname =jComboBox2.getSelectedItem().toString();
         int cpos = bigname.indexOf(",");
         String subcatname = bigname.substring(cpos+1);
         jTextField1.setText(""+subcatname);
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
        fetchsubcat();
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
        
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       if(validn())
        {
         try
            {
                Connection myconn = DriverManager.getConnection(myurl, uname, pass);
                try
                {
                   String q="update managesubcat set SubCatName=? where SubCatID=?";
                   PreparedStatement myst = myconn.prepareStatement(q);
                   
                   String bigname = jComboBox2.getSelectedItem().toString();
                   
                   int cpos = bigname.indexOf(",");
                   String subcatid = bigname.substring(0, cpos);
                   String subcatname =jTextField1.getText();
                   
                   myst.setString(1, subcatname);
                   myst.setString(2, subcatid);
                   
                   int count = myst.executeUpdate();
                   if(count==1)
                   {
                       JOptionPane.showMessageDialog(rootPane, "Category updated successfully");         
                   }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error Occured " + e.getMessage());
                }
                finally
                {
                    myconn.close();
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
            }}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(validn())
        {
        int uchoice = JOptionPane.showConfirmDialog(rootPane, "Are you sure to delete?", "Confirmation?", JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);
        if(uchoice==JOptionPane.YES_OPTION)
        {
            try
            {
                Connection myconn = DriverManager.getConnection(myurl, uname, pass);
                try
                {
                   String q="delete from managesubcat where subcatid=?";
                   PreparedStatement myst = myconn.prepareStatement(q);
                   
                   String bigname = jComboBox2.getSelectedItem().toString();
                   int cpos = bigname.indexOf(",");
                   String catid = bigname.substring(0, cpos);
                   
                   myst.setString(1, catid);
                   int res=myst.executeUpdate();
                  if(res==1)
                  {
                      JOptionPane.showMessageDialog(rootPane, "Record deleted");

                  }
                  
                 }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane, "Error Occured due to presence of product " );
                }
                finally
                {
                    myconn.close();
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
            }
        }
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    void fetchsubcat()
    {
        try
        {
            Connection myconn = DriverManager.getConnection(myurl, uname, pass);
            try
            {  
               String q="select * from managesubcat where catid=?";
               PreparedStatement myst = myconn.prepareStatement(q);
               
               String bigname =jComboBox1.getSelectedItem().toString();
               int cpos = bigname.indexOf(",");
               String catid = bigname.substring(0, cpos);
                
               myst.setString(1, catid);
               
               ResultSet res=myst.executeQuery(); 
               jComboBox2.removeAllItems();
               if(res.next())
               {
                   jComboBox2.addItem("Choose");
                  do
                  {
                   jComboBox2.addItem(res.getString("subcatid") + "," + res.getString("subcatname"));
                  }
                  while(res.next());
               }
               else
               {
                   jComboBox2.removeAllItems();
                   jComboBox2.addItem("No Subcatgeory available");
               }
             }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error Occured " + e.getMessage());
            }
            finally
            {
                myconn.close();
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
        }   
    }
    
    
    void fetchcat()
    {
        try
        {
            
            Connection myconn = DriverManager.getConnection(myurl, uname, pass);
            try
            {
               String q="select * from managecat";
               PreparedStatement myst = myconn.prepareStatement(q);
               ResultSet res=myst.executeQuery(); 
               if(res.next())
               {
                  
                  do
                  {
                   jComboBox1.addItem(res.getString("catid") + "," + res.getString("catname"));
                  }
                  while(res.next());
               }
               else
               {
                   jComboBox1.removeAllItems();
                   jComboBox1.addItem("No Catgeory available");
               }
             }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error Occured " + e.getMessage());
            }
            finally
            {
                myconn.close();
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
        }   
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
